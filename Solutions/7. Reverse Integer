/*Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
*/
class Solution {
public:
    int reverse(int x) {
        int ans = 0;
        
        while(x){
            int pop = x%10;
            x /= 10;
            
            //>7 because the last digit of INT_MAX is 7
            //if ans*10 > INT_MAX or ans*10+pop > INT_MAX
            if(ans > INT_MAX/10 || (ans == INT_MAX/10 && pop > 7))
                return 0;
            
            //<-8 because the last digit of INT_MIN is 8
            //if ans*10 < INT_MIN or ans*10+pop < INT_MIN
            if(ans < INT_MIN/10 || (ans == INT_MIN/10 && pop < -8))
                return 0;
            
            ans = ans*10 + pop;
        }
        
        return ans;
    }
};
