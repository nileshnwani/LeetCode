/*The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.

Given an integer n, return the number of distinct solutions to the n-queens puzzle.*/

class Solution {
public:
    int n;
    
    void backtrack(vector<int>& used, int r, int& ans){
        if(r == n){
            ++ans;
        }else{
            for(int c = 0; c < n; ++c){
                if(!used[c] && !used[n+r-c+n-1] && !used[n+2*n-1+r+c]){
                    used[c] = used[n+r-c+n-1] = used[n+2*n-1+r+c] = true;
                    
                    backtrack(used, r+1, ans);
                    
                    used[c] = used[n+r-c+n-1] = used[n+2*n-1+r+c] = false;
                }
            }
        }
    };
    
    int totalNQueens(int n) {
        this->n = n;
        int ans = 0;
        vector<int> used(n + 2*n-1 + 2*n-1, false);
        
        backtrack(used, 0, ans);
        
        return ans;
    }
};
